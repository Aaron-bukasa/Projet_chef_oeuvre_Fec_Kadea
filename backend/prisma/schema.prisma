generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// DEFINITION DES MODELES

model Demande {
  id                Int         @id @default(autoincrement())
  nom               String
  email             String      @unique
  telephone         String      @unique
  organisation      String
  role_ds_entreprise String
  motivation        String
  objectifs         String
  statut            String      @default("en attente")  // en attente, validée, rejetée
  date_soumission   DateTime
  //fichiers_joints   Fichier[]
  suivi_demande  SuiviDemande[]
}

model SuiviDemande {
  id          Int       @id @default(autoincrement())
  evenement   String
  date        DateTime  @default(now())
  demande     Demande   @relation(fields: [demandeId], references: [id])
  demandeId   Int
}

model User {
id       Int      @id @default(autoincrement())
email    String @unique
password String
role                String      @default("utilisateur")  // administrateur, utilisateur
date_inscription    DateTime @default(now())
profil_user Profil?
suivi_user  SuiviUser[]
}

model Profil {
  id             Int      @id @default(autoincrement())
  nom            String
  telephone      String   @unique
  avatar         String?
  bannere        String?
  adress         String?
  ville          String?
  date_adhesion  DateTime?
  date_expiration DateTime?
  status_adhesion String @default("inactif") // actif, inactif
  user           User     @relation(fields: [userId], references: [id])
  userId         Int      @unique
}

model SuiviUser {
id          Int       @id @default(autoincrement())
notifications   String
date        DateTime  @default(now())
user           User     @relation(fields: [userId], references: [id])
userId         Int  @unique
}



model NewsLetter {
  id          Int       @id @default(autoincrement())
  email    String

}

model Message {
  id          Int       @id @default(autoincrement())
  email    String
  message    String
}


model Rapport {
  id                  Int         @id @default(autoincrement())
  type                String      // adhésions, demandes, etc.
  date_generation     DateTime
  contenu             String
}

//model Fichier {
 // id                  Int         @id @default(autoincrement())
 // nom                 String
 // type                String
 // taille              Int
 // contenu             Bytes
 // demande             Demande?    @relation(fields: [demandeId], references: [id])
 // demandeId           Int?
//}

model Paiement {
  id                  Int         @id @default(autoincrement())
  montant             Float
  devise              String
  statut              String      @default("en attente")  // en attente, validé, rejeté
  date_paiement       DateTime
}