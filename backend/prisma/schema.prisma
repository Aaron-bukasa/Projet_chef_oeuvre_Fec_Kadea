generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Définition des modèles

model Demande {
  id                Int         @id @default(autoincrement())
  nom               String
  email             String      @unique
  telephone         String      @unique
  organisation      String
  role_ds_entreprise String
  motivation        String
  objectifs         String
  statut            String      @default("en attente")  // en attente, validée, rejetée
  date_soumission   DateTime
  //fichiers_joints   Fichier[]
  suivi_demande  SuiviDemande[]
}

model SuiviDemande {
  id          Int       @id @default(autoincrement())
  evenement   String
  date        DateTime  @default(now())
  demande     Demande   @relation(fields: [demandeId], references: [id])
  demandeId   Int
}


model Utilisateur {
  id                  Int         @id @default(autoincrement())
  nom                 String
  email               String      @unique
  telephone           String      @unique
  mot_de_passe        String
  role                String      @default("utilisateur")  // administrateur, utilisateur
  statut              String      @default("actif")  // actif, inactif
  date_inscription    DateTime
  suivi_utilisateur  SuiviUtilisateur[]
}

model SuiviUtilisateur {
  id          Int       @id @default(autoincrement())
  notifications   String
  date        DateTime  @default(now())
  utilisateur     Utilisateur   @relation(fields: [utilisateurId ], references: [id])
  utilisateurId   Int
}


model Rapport {
  id                  Int         @id @default(autoincrement())
  type                String      // adhésions, demandes, etc.
  date_generation     DateTime
  contenu             String
}

//model Fichier {
 // id                  Int         @id @default(autoincrement())
 // nom                 String
 // type                String
 // taille              Int
 // contenu             Bytes
 // demande             Demande?    @relation(fields: [demandeId], references: [id])
 // demandeId           Int?
//}

model Paiement {
  id                  Int         @id @default(autoincrement())
  montant             Float
  devise              String
  statut              String      @default("en attente")  // en attente, validé, rejeté
  date_paiement       DateTime
}